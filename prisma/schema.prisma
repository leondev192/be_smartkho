generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

// User model
model User {
  id          String    @id @default(uuid()) @map("_id")
  email       String    @unique
  password    String
  fullName    String
  avatarUrl   String?
  phoneNumber String?
  address     String?
  role        RoleEnum
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

// Product model
model Product {
  id              String              @id @default(uuid()) @map("_id")
  sku             String              @unique
  name            String
  description     String?
  category        String?
  quantityInStock Int                 @default(0)          // Tracks current stock level
  reorderLevel    Int                 @default(10)
  createdAt       DateTime            @default(now())
  updatedAt       DateTime            @updatedAt
  transactions    Transaction[]       // List of related transactions
  supplierId      String?
  supplier        Supplier?           @relation(fields: [supplierId], references: [id])
  transactionHistory TransactionHistory[] // List of related transaction histories
}

// Transaction model for stock movements
model Transaction {
  id               String              @id @default(uuid()) @map("_id")
  productId        String
  transactionType  TransactionType
  quantity         Int
  transactionDate  DateTime            @default(now())
  approved         Boolean             @default(false)
  approvedBy       String?
  createdBy        String
  remarks          String?

  product          Product             @relation(fields: [productId], references: [id])
  transactionHistory TransactionHistory[] // Link to transaction history
}

// TransactionHistory model to record each transaction's effect on stock
model TransactionHistory {
  id               String              @id @default(uuid()) @map("_id")
  transactionId    String
  productId        String
  action           String
  quantity         Int
  userId           String
  timestamp        DateTime            @default(now())

  product          Product             @relation(fields: [productId], references: [id])
  transaction      Transaction         @relation(fields: [transactionId], references: [id])
}

// Supplier model
model Supplier {
  id          String    @id @default(uuid()) @map("_id")
  name        String    @unique
  contactInfo String?
  address     String?
  products    Product[]
}

// Notification model
model Notification {
  id          String    @id @default(uuid()) @map("_id")
  userId      String
  message     String
  read        Boolean   @default(false)
  createdAt   DateTime  @default(now())
}

// Enum for user roles
enum RoleEnum {
  ADMIN
  WAREHOUSE_STAFF
}

// Enum for transaction types
enum TransactionType {
  IN
  OUT
}
